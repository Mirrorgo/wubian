// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// list对应artist或者album或者playlist的id
enum ListType {
  ARTIST
  ALBUM
  PLAYLIST
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  // playlists Playlist[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  library List[]
}

// list对应artist或者album或者playlist的id
model List {
  id        Int      @id @default(autoincrement())
  type      ListType // artist, album, playlist
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
}

model Song {
  id        Int      @id @default(autoincrement())
  title     String
  duration  Int // duration in seconds
  url       String
  artistId  Int
  albumId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  artist    Artist     @relation(fields: [artistId], references: [id])
  album     Album?     @relation(fields: [albumId], references: [id])
  playlists Playlist[] @relation("PlaylistSong") // 隐式处理多对多的关系
}

// 歌手
model Artist {
  id        Int      @id @default(autoincrement())
  name      String
  songs     Song[]
  albums    Album[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 专辑
model Album {
  id        Int      @id @default(autoincrement())
  title     String
  artistId  Int
  artist    Artist   @relation(fields: [artistId], references: [id])
  songs     Song[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 歌单
model Playlist {
  id        Int      @id @default(autoincrement())
  title     String
  songs     Song[]   @relation("PlaylistSong")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 筛选集（保存的筛选条件）
